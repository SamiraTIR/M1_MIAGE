CPU TIME (ms) BEGIN (total = 116) Sat Jui 20 22:03:46 2015
rank   self  accum   count trace method
   1  4.31%  4.31%    1591 301874 java.lang.Integer.intValue
   2  3.45%  7.76%       6 300997 sun.misc.PerfCounter.<init>
   3  2.59% 10.34%      42 301585 java.io.FileOutputStream.write
   4  2.59% 12.93%       2 301228 java.io.Win32FileSystem.normalize
   5  1.72% 14.66%     448 300372 java.lang.CharacterDataLatin1.getProperties
   6  1.72% 16.38%     448 300374 java.lang.Character.toLowerCase
   7  1.72% 18.10%     896 300387 java.lang.String.charAt
   8  1.72% 19.83%     520 301895 java.lang.Integer.equals
   9  1.72% 21.55%     162 301876 java.util.ArrayList.indexOf
  10  1.72% 23.28%       9 300401 sun.misc.URLClassPath$3.run
  11  1.72% 25.00%       8 300358 java.io.Win32FileSystem.normalize
  12  1.72% 26.72%     822 300354 java.lang.StringBuffer.append
  13  1.72% 28.45%     822 300353 java.lang.AbstractStringBuilder.append
  14  1.72% 30.17%       9 301878 miage.sudoku.test.performance.Sudoku.ligneValide
  15  1.72% 31.90%      42 301547 java.nio.CharBuffer.<init>
  16  1.72% 33.62%     822 300352 java.lang.AbstractStringBuilder.ensureCapacityInternal
  17  0.86% 34.48%       9 301792 java.lang.String.split
  18  0.86% 35.34%      81 301789 java.util.ArrayList.access$200
  19  0.86% 36.21%       9 301785 java.util.AbstractList.listIterator
  20  0.86% 37.07%       9 301777 java.util.ArrayList.subList
  21  0.86% 37.93%      10 301744 java.io.BufferedReader.readLine
  22  0.86% 38.79%      21 301602 java.io.BufferedWriter.min
  23  0.86% 39.66%      42 301586 java.io.BufferedOutputStream.flushBuffer
  24  0.86% 40.52%       9 301797 java.lang.Integer.toString
  25  0.86% 41.38%      42 301566 sun.nio.cs.SingleByte$Encoder.encodeLoop
  26  0.86% 42.24%      42 301565 sun.nio.cs.SingleByte$Encoder.encodeArrayLoop
  27  0.86% 43.10%      42 301563 sun.nio.cs.SingleByte.withResult
  28  0.86% 43.97%      42 301560 java.nio.CharBuffer.arrayOffset
  29  0.86% 44.83%      15 300028 java.lang.System.getProperty
  30  0.86% 45.69%      42 301550 java.nio.Buffer.hasRemaining
  31  0.86% 46.55%      81 301829 java.lang.Integer.parseInt
  32  0.86% 47.41%       1 301490 java.lang.Class.privateGetDeclaredMethods
  33  0.86% 48.28%       1 301457 sun.misc.PerfCounter.add
  34  0.86% 49.14%       1 301436 java.net.URLClassLoader.defineClass
  35  0.86% 50.00%       1 301353 java.security.BasicPermission.newPermissionCollection
  36  0.86% 50.86%       1 301314 java.io.FilePermission.newPermissionCollection
  37  0.86% 51.72%       1 301248 sun.net.www.protocol.file.FileURLConnection.getPermission
  38  0.86% 52.59%     256 301869 java.lang.Integer.<init>
  39  0.86% 53.45%       9 301208 java.nio.CharBuffer.toString
  40  0.86% 54.31%       1 301870 java.lang.Integer$IntegerCache.<clinit>
  41  0.86% 55.17%       1 301162 sun.net.www.protocol.file.Handler.createFileURLConnection
  42  0.86% 56.03%       1 301160 sun.net.www.URLConnection.<init>
  43  0.86% 56.90%       1 301130 java.io.Win32FileSystem.prefixLength
  44  0.86% 57.76%       1 301125 java.io.Win32FileSystem.normalize
  45  0.86% 58.62%       1 301119 sun.net.www.ParseUtil.decode
  46  0.86% 59.48%       1 301070 java.lang.String.indexOf
  47  0.86% 60.34%       1 301029 java.util.HashMap.get
  48  0.86% 61.21%     171 301871 java.lang.Integer.valueOf
  49  0.86% 62.07%       9 301914 miage.sudoku.test.performance.Sudoku.carreeValide
  50  0.86% 62.93%       1 300887 java.lang.Package.getSystemPackage
  51  0.86% 63.79%       1 300845 java.lang.String.lastIndexOf
  52  0.86% 64.66%       6 300773 java.lang.AbstractStringBuilder.append
  53  0.86% 65.52%       3 300731 java.io.ExpiringCache.entryFor
  54  0.86% 66.38%       4 300722 java.lang.String.hashCode
  55  0.86% 67.24%       1 300707 sun.net.www.ParseUtil.decode
  56  0.86% 68.10%      18 300687 java.nio.charset.CoderResult.isError
  57  0.86% 68.97%      27 300679 sun.nio.cs.UTF_8.updatePositions
  58  0.86% 69.83%      54 300677 java.nio.Buffer.position
  59  0.86% 70.69%      72 300658 java.lang.Character.digit
  60  0.86% 71.55%     153 300656 java.lang.CharacterDataLatin1.digit
  61  0.86% 72.41%     153 300655 java.lang.CharacterDataLatin1.getProperties
  62  0.86% 73.28%      36 300650 java.lang.String.<init>
  63  0.86% 74.14%     121 300648 java.lang.Math.min
  64  0.86% 75.00%      91 300646 java.lang.StringBuilder.append
  65  0.86% 75.86%       1 300632 sun.nio.cs.UTF_8.newDecoder
  66  0.86% 76.72%       1 300546 java.lang.Class.privateGetDeclaredConstructors
  67  0.86% 77.59%       1 300484 sun.nio.cs.ThreadLocalCoders.<clinit>
  68  0.86% 78.45%       2 300424 sun.misc.URLClassPath.getResource
  69  0.86% 79.31%     551 301875 java.lang.Integer.equals
  70  0.86% 80.17%       8 300400 sun.misc.URLClassPath$JarLoader.<init>
  71  0.86% 81.03%       8 300399 java.io.File.exists
  72  0.86% 81.90%      90 301884 java.util.ArrayList.add
  73  0.86% 82.76%     520 301885 java.lang.Integer.equals
  74  0.86% 83.62%     448 300373 java.lang.CharacterDataLatin1.toLowerCase
  75  0.86% 84.48%      81 301887 java.util.ArrayList.contains
  76  0.86% 85.34%     448 300371 java.lang.CharacterData.of
  77  0.86% 86.21%       9 301904 miage.sudoku.test.performance.Sudoku.ligneValide
  78  0.86% 87.07%      90 301912 java.util.ArrayList.add
  79  0.86% 87.93%      91 301184 java.lang.AbstractStringBuilder.append
  80  0.86% 88.79%       1 301946 miage.sudoku.test.performance.Sudoku.main
  81  0.86% 89.66%       8 300311 java.lang.String.<init>
  82  0.86% 90.52%       8 300295 java.net.URLStreamHandler.toExternalForm
  83  0.86% 91.38%       9 300293 java.lang.String.<init>
  84  0.86% 92.24%      27 300289 java.lang.AbstractStringBuilder.append
  85  0.86% 93.10%      36 300279 java.lang.String.length
  86  0.86% 93.97%      36 300253 java.lang.AbstractStringBuilder.append
  87  0.86% 94.83%      18 300248 java.lang.String.toLowerCase
  88  0.86% 95.69%      15 300201 java.lang.ClassLoader.findLoadedClass
  89  0.86% 96.55%      30 300192 java.util.concurrent.ConcurrentHashMap$Segment.put
  90  0.86% 97.41%      31 300190 java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  91  0.86% 98.28%      20 300174 java.util.concurrent.locks.ReentrantLock.<init>
  92  0.86% 99.14%       1 300162 java.lang.ClassLoader.getSystemClassLoader
  93  0.86% 100.00%       1 300110 java.lang.ThreadLocal.createMap
CPU TIME (ms) END
